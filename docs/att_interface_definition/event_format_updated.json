{
    "$schema": "http://json-schema.org/draft-04/schema#",
	
	"definitions": {
        "attCopyrightNotice": {
			"description": "Copyright (c) <2016>, AT&T Intellectual Property.  All other rights reserved",
			"type": "object",
			"properties": {
				"useAndRedistribution": {
					"description": "Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:",
					"type": "string"
				},
				"condition1": {
					"description": "Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.",
					"type": "string"
				},
				"condition2": {
					"description": "Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.",
					"type": "string"
				},
				"condition3": {
					"description": "All advertising materials mentioning features or use of this software must display the following acknowledgement:  This product includes software developed by the AT&T.",
					"type": "string"
				},
				"condition4": {
					"description": "Neither the name of AT&T nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.",
					"type": "string"
				},
				"disclaimerLine1": {
					"description": "THIS SOFTWARE IS PROVIDED BY AT&T INTELLECTUAL PROPERTY AS IS AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS",
					"type": "string"
				},
				"disclaimerLine2": {
					"description": "FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL AT&T INTELLECTUAL PROPERTY BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES",
					"type": "string"
				},
				"disclaimerLine3": {
					"description": "(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,",
					"type": "string"
				},
				"disclaimerLine4": {
					"description": "WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
					"type": "string"
				}
			}
		},
		"capacityFields": {
			"description": "fields specific to capacity events",
			"type": "object",
			"properties": { 
				"additionalFields": {
					"description": "array of name-value pair fields",
					"type": "array",
					"items": {
						"$ref": "#/definitions/field"
					}
				},
				"capacityFieldsVersion": {
					"description": "version of the capacityFields block",
					"type": "number"
				}
			}
		},
 		"codecsInUse": {
			"description": "number of times an identified codec was used over the measurementInterval",
			"type": "object",
			"properties": {
				"codecIdentifier": { "type": "string" },
				"codecUtilization": { "type": "number" }
			},
			"required": [ "codecIdentifier", "codecUtilization" ]
		},
		"commonEventHeader": {
			"description": "fields common to all events",
			"type": "object",
			"properties": {
				"domain": {
					"description": "the eventing domain associated with the event",
					"type": "string",
					"enum": [
						"capacity",
						"fault",
						"heartbeat",
						"measurementsForVfScaling",
						"mobileFlow",
						"other",
						"syslog",
						"thresholdCrossingAlert",
						"usage"
					]
				},
				"eventId": {
					"description": "event key that is unique to the event source",
					"type": "string"
				},
				"eventType": {
					"description": "unique event topic name",
					"type": "string"
				},
				"functionalRole": {
					"description": "function of the event source e.g., eNodeB, MME, PCRF",
					"type": "string"
				},
				"lastEpochMicrosec": {
					"description": "the latest unix time aka epoch time associated with the event from any component--as microseconds elapsed since 1 Jan 1970 not including leap seconds",
					"type": "number"
				},
				"priority": {
					"description": "processing priority",
					"type": "string",
					"enum": [
						"High",
						"Medium",
						"Normal",
						"Low"
					]
				},
				"reportingEntityId": {
					"description": "UUID identifying the entity reporting the event, for example an EMS",
					"type": "string"
				},
				"reportingEntityName": {
					"description": "name of the entity reporting the event, for example, an EMS",
					"type": "string"
				},
				"sequence": {
					"description": "ordering of events communicated by an event source instance or 0 if not needed",
					"type": "integer"
				},
				"sourceId": {
					"description": "UUID identifying the entity experiencing the event issue",
					"type": "string"
				},
				"sourceName": {
					"description": "name of the entity experiencing the event issue",
					"type": "string"
				},
				"startEpochMicrosec": {
					"description": "the earliest unix time aka epoch time associated with the event from any component--as microseconds elapsed since 1 Jan 1970 not including leap seconds",
					"type": "number"
				},
				"version": {
					"description": "version of the event header",
					"type": "number"
				}
			},
			"required": [ "domain", "eventId", "functionalRole", "lastEpochMicrosec", 
						  "priority", "reportingEntityId", "reportingEntityName", 
			              "sequence", "sourceId", "sourceName", "startEpochMicrosec" ]
		},
		"counter": {
			"description": "performance counter",
			"type": "object",
			"properties": {
				"criticality": { "type": "string", "enum": [ "CRIT", "MAJ" ] },
				"name":  { "type": "string" },
				"thresholdCrossed": { "type": "string" },
				"value": { "type": "string"}
			},
			"required": [ "criticality", "name", "thresholdCrossed", "value" ]
		},
		"cpuUsage": {
			"description": "percent usage of an identified CPU",
			"type": "object",
			"properties": {
				"cpuIdentifier": { "type": "string" },
				"percentUsage": { "type": "number" }
			},
			"required": [ "cpuIdentifier", "percentUsage" ]
		},
        "event": {
            "description": "generic event format",
	        "type": "object",
	        "properties": {
		        "capacityFields": { "$ref": "#/definitions/capacityFields" },
		        "commonEventHeader": { "$ref": "#/definitions/commonEventHeader" },
		        "faultFields": { "$ref": "#/definitions/faultFields" },
	 	        "measurementsForVfScalingFields": { "$ref": "#/definitions/measurementsForVfScalingFields" },
				"mobileFlowFields": { "$ref": "#/definitions/mobileFlowFields" },
		        "otherFields": { "$ref": "#/definitions/otherFields" },
				"syslogFields": { "$ref": "#/definitions/syslogFields" },
		        "thresholdCrossingAlertFields": { "$ref": "#/definitions/thresholdCrossingAlertFields" },
		        "usageFields": { "$ref": "#/definitions/usageFields" }
        	},
            "required": [ "commonEventHeader" ]
        },
		"eventDomainThrottleSpecification": {
			"description": "specification of what information to suppress within an event domain",
			"type": "object",
			"properties": { 
		        "eventDomain": { 
			        "description": "Event domain enum from the Event Listener Spec, currently: capacity, fault, heartbeat, measurement, mobileFlow, other, syslog, thresholdCrossingAlert, usage",
			        "type": "string"
		        },
		        "suppressedFieldNames": { 
			        "description": "List of optional field names in the event block that should not be sent to the Event Listener",
			        "type": "array",
					"items": {
					    "type": "string"
					}
		        },
				"suppressedNvPairsList": {
					"description": "Optional list of specific NvPairsNames to suppress within a given Name-Value Field",
			        "type": "array",
					"items": {
					    "$ref": "#/definitions/suppressedNvPairs"
					}
		        }
			},
			"required": [ "eventDomain" ]
		},
		"eventDomainThrottleSpecificationList": {
			"description": "array of eventDomainThrottleSpecifications",
			"type": "array",
			"items": { 
			    "$ref": "#/definitions/eventDomainThrottleSpecification"
			},
			"minItems": 0
		},
		"eventList": {
			"description": "array of events",
			"type": "array",
			"items": {  
				"$ref": "#/definitions/event" 
			}
		},
		"eventThrottlingState": {
			"description": "reports the throttling in force at the event source",
			"type": "object",
			"properties": { 
		        "eventThrottlingMode": { 
			        "description": "Mode the event manager is in",
			        "type": "string",
					"enum": [
						"normal",
						"throttled"
					]
		        },
				"eventDomainThrottleSpecificationList": { "$ref": "#/definitions/eventDomainThrottleSpecificationList" }
			},
			"required": [ "eventThrottlingMode" ]
		},
		"faultFields": {
			"description": "fields specific to fault events",
			"type": "object",
			"properties": {
				"alarmAdditionalInformation": {
					"description": "additional alarm information",
					"type": "array",
					"items": {
						"$ref": "#/definitions/field"
					}
				},
				"alarmCondition": {
					"description": "alarm condition reported by the device",
					"type": "string"
				},
				"alarmInterfaceA": {
					"description": "card, port, channel or interface name of the device generating the alarm",
					"type": "string"
				},
				"eventSeverity": {
					"description": "event severity or priority",
					"type": "string",
					"enum": [
						"CRITICAL",
						"MAJOR",
						"MINOR",
						"WARNING",
						"NORMAL"
					]
				},
				"eventSourceType": {
					"description": "type of event source",
					"type": "string",
					"enum": [
						"other(0)",
						"router(1)",
						"switch(2)",
						"host(3)",
						"card(4)",
						"port(5)",
						"slotThreshold(6)",
						"portThreshold(7)",
						"virtualMachine(8)"
					]
				},
				"faultFieldsVersion": {
					"description": "version of the faultFields block",
					"type": "number"
				},
				"specificProblem": {
					"description": "short description of the alarm or problem",
					"type": "string"
				},
				"vfStatus": {
					"description": "virtual function status enumeration",
					"type": "string",
					"enum": [
						"Active",
						"Idle",
						"Preparing to terminate",
						"Ready to terminate",
						"Requesting termination"
					]
				}
			},
			"required": [ "alarmCondition", "eventSeverity",
			              "eventSourceType", "specificProblem", "vfStatus" ]
		},
		"featuresInUse": {
			"description": "number of times an identified feature was used over the measurementInterval",
			"type": "object",
			"properties": {
				"featureIdentifier": { "type": "string" },
				"featureUtilization": { "type": "number" }
			},
			"required": [ "featureIdentifier", "featureUtilization" ]
		},
		"field": {
			"description": "name value pair",
			"type": "object",
			"properties": {
				"name":  { "type": "string" },
				"value": { "type": "string" }
			},
			"required": [ "name", "value" ]
		},
		"filesystemUsage": {
			"description": "disk usage of an identified virtual machine in gigabytes and/or gigabytes per second",
			"type": "object",
			"properties": {
				"blockConfigured": { "type": "number" },
				"blockIops": { "type": "number" },
				"blockUsed": { "type": "number" },
				"ephemeralConfigured": { "type": "number" },
				"ephemeralIops": { "type": "number" },
				"ephemeralUsed": { "type": "number" },
				"vmIdentifier": { "type": "string" }
			},
			"required": [ "blockConfigured", "blockIops", "blockUsed", "ephemeralConfigured",
			              "ephemeralIops", "ephemeralUsed", "vmIdentifier" ]
		},
		"gtpPerFlowMetrics": {
			"description": "Mobility GTP Protocol per flow metrics",
			"type": "object",
			"properties": {
				"avgBitErrorRate": {
					"description": "average bit error rate",
					"type": "number"
				},
				"avgPacketDelayVariation": {
					"description": "Average packet delay variation or jitter in milliseconds for received packets: Average difference between the packet timestamp and time received for all pairs of consecutive packets",
					"type": "number"
				},
				"avgPacketLatency": {
					"description": "average delivery latency",
					"type": "number"
				},
				"avgReceiveThroughput": {
					"description": "average receive throughput",
					"type": "number"
				},
				"avgTransmitThroughput": {
					"description": "average transmit throughput",
					"type": "number"
				},
				"durConnectionFailedStatus": {
					"description": "duration of failed state in milliseconds, computed as the cumulative time between a failed echo request and the next following successful error request, over this reporting interval",
					"type": "number"
				},
				"durTunnelFailedStatus": {
					"description": "Duration of errored state, computed as the cumulative time between a tunnel error indicator and the next following non-errored indicator, over this reporting interval",
					"type": "number"
				},
				"flowActivatedBy": {
					"description": "Endpoint activating the flow",
					"type": "string"
				},
				"flowActivationEpoch": {
					"description": "Time the connection is activated in the flow (connection) being reported on, or transmission time of the first packet if activation time is not available",
					"type": "number"
				},
				"flowActivationMicrosec": {
					"description": "Integer microseconds for the start of the flow connection",
					"type": "number"
				},
				"flowActivationTime": {
					"description": "time the connection is activated in the flow being reported on, or transmission time of the first packet if activation time is not available--should be like 'Wed, 15 Oct 2014 13:01:52 GMT'",
					"type": "string"
				},
				"flowDeactivatedBy": {
					"description": "Endpoint deactivating the flow",
					"type": "string"
				},
				"flowDeactivationEpoch": {
					"description": "Time for the start of the flow connection, in integer UTC epoch time aka UNIX time",
					"type": "number"
				},
				"flowDeactivationMicrosec": {
					"description": "Integer microseconds for the start of the flow connection",
					"type": "number"
				},
				"flowDeactivationTime": {
					"description": "Transmission time of the first packet in the flow connection being reported on with the following sample format: ‘Wed, 15 Oct 2014 13:01:52 GMT’",
					"type": "string"
				},
				"flowStatus": {
					"description": "connection status at reporting time as a working / inactive / failed indicator value",
					"type": "string"
				},
				"gtpConnectionStatus": {
					"description": "Current connection state at reporting time",
					"type": "string"
				},
				"gtpTunnelStatus": {
					"description": "Current tunnel state  at reporting time",
					"type": "string"
				},
				"ipTosCountList": {
					"description": "array of key: value pairs where the keys are drawn from the IP Type-of-Service identifiers which range from '0' to '255', and the values are the count of packets that had those ToS identifiers in the flow",
                    "type": "array", 
                    "uniqueItems": true, 
                    "items": { 
						"type": "array", 
						"items": [ 
							{ "type": "string" }, 
							{ "type": "number" } 
						], 
						"additionalItems": false 
					} 
				},
				"ipTosList": {
					"description": "Array of unique IP Type-of-Service values observed in the flow where values range from '0' to '255'",
					"type": "array",
					"items": {  
						"type": "string" 
					}
				},
				"largePacketRtt": {
					"description": "large packet round trip time",
					"type": "number"
				},
				"largePacketThreshold": {
					"description": "large packet threshold being applied",
					"type": "number"
				},
				"maxPacketDelayVariation": {
					"description": "Maximum packet delay variation or jitter in milliseconds for received packets: Maximum of the difference between the packet timestamp and time received for all pairs of consecutive packets",
					"type": "number"
				},
				"maxReceiveBitRate": {
					"description": "maximum receive bit rate",
					"type": "number"
				},
				"maxTransmitBitRate": {
					"description": "maximum transmit bit rate",
					"type": "number"
				},
				"mobileQciCosCountList": {
					"description": "array of key: value pairs where the keys are drawn from LTE QCI or UMTS class of service strings, and the values are the count of packets that had those strings in the flow",
                    "type": "array", 
                    "uniqueItems": true, 
                    "items": { 
						"type": "array", 
						"items": [ 
							{ "type": "string" }, 
							{ "type": "number" } 
						], 
						"additionalItems": false 
					} 
				},
				"mobileQciCosList": {
					"description": "Array of unique LTE QCI or UMTS class-of-service values observed in the flow",
					"type": "array",
					"items": {  
						"type": "string" 
					}
				},
				"numActivationFailures": {
					"description": "Number of failed activation requests, as observed by the reporting node",
					"type": "number"
				},
				"numBitErrors": {
					"description": "number of errored bits",
					"type": "number"
				},
				"numBytesReceived": {
					"description": "number of bytes received, including retransmissions",
					"type": "number"
				},
				"numBytesTransmitted": {
					"description": "number of bytes transmitted, including retransmissions",
					"type": "number"
				},
				"numDroppedPackets": {
					"description": "number of received packets dropped due to errors per virtual interface",
					"type": "number"
				},
				"numGtpEchoFailures": {
					"description": "Number of Echo request path failures where failed paths are defined in 3GPP TS 29.281 sec 7.2.1 and 3GPP TS 29.060 sec. 11.2",
					"type": "number"
				},
				"numGtpTunnelErrors": {
					"description": "Number of tunnel error indications where errors are defined in 3GPP TS 29.281 sec 7.3.1 and 3GPP TS 29.060 sec. 11.1",
					"type": "number"
				},
				"numHttpErrors": {
					"description": "Http error count",
					"type": "number"
				},
				"numL7BytesReceived": {
					"description": "number of tunneled layer 7 bytes received, including retransmissions",
					"type": "number"
				},
				"numL7BytesTransmitted": {
					"description": "number of tunneled layer 7 bytes transmitted, excluding retransmissions",
					"type": "number"
				},
				"numLostPackets": {
					"description": "number of lost packets",
					"type": "number"
				},
				"numOutOfOrderPackets": {
					"description": "number of out-of-order packets",
					"type": "number"
				},
				"numPacketErrors": {
					"description": "number of errored packets",
					"type": "number"
				},
				"numPacketsReceivedExclRetrans": {
					"description": "number of packets received, excluding retransmission",
					"type": "number"
				},
				"numPacketsReceivedInclRetrans": {
					"description": "number of packets received, including retransmission",
					"type": "number"
				},
				"numPacketsTransmittedInclRetrans": {
					"description": "number of packets transmitted, including retransmissions",
					"type": "number"
				},
				"numRetries": {
					"description": "number of packet retries",
					"type": "number"
				},
				"numTimeouts": {
					"description": "number of packet timeouts",
					"type": "number"
				},
				"numTunneledL7BytesReceived": {
					"description": "number of tunneled layer 7 bytes received, excluding retransmissions",
					"type": "number"
				},
				"roundTripTime": {
					"description": "round trip time",
					"type": "number"
				},
				"tcpFlagCountList": {
					"description": "array of key: value pairs where the keys are drawn from TCP Flags and the values are the count of packets that had that TCP Flag in the flow",
                    "type": "array", 
                    "uniqueItems": true, 
                    "items": { 
						"type": "array", 
						"items": [ 
							{ "type": "string" }, 
							{ "type": "number" } 
						], 
						"additionalItems": false 
					} 
				},
				"tcpFlagList": {
					"description": "Array of unique TCP Flags observed in the flow",
					"type": "array",
					"items": {  
						"type": "string" 
					}
				},
				"timeToFirstByte": {
					"description": "Time in milliseconds between the connection activation and first byte received",
					"type": "number"
				}
			},
			"required": [ "avgBitErrorRate", "avgPacketDelayVariation", "avgPacketLatency",
                          "avgReceiveThroughput", "avgTransmitThroughput", 			
						  "flowActivationEpoch", "flowActivationMicrosec",
 						  "flowDeactivationEpoch", "flowDeactivationMicrosec",
                          "flowDeactivationTime", "flowStatus", 
						  "maxPacketDelayVariation", "numActivationFailures", 
 						  "numBitErrors", "numBytesReceived", "numBytesTransmitted",
						  "numDroppedPackets", "numL7BytesReceived", 
						  "numL7BytesTransmitted", "numLostPackets",  
						  "numOutOfOrderPackets", "numPacketErrors", 
						  "numPacketsReceivedExclRetrans", 
						  "numPacketsReceivedInclRetrans",
						  "numPacketsTransmittedInclRetrans", 
						  "numRetries", "numTimeouts", "numTunneledL7BytesReceived", 
						  "roundTripTime", "timeToFirstByte"  
			]
		},
		"latencyBucketMeasure": {
			"description": "number of counts falling within a defined latency bucket",
			"type": "object",
			"properties": {
				"countsInTheBucket": { "type": "number" },
				"highEndOfLatencyBucket": { "type": "number" },
				"lowEndOfLatencyBucket":  { "type": "number" }
			},
			"required": [ "countsInTheBucket" ]
		},
		"measurementsForVfScalingFields": {
			"description": "measurement fields for vf scaling",
			"type": "object",
			"properties": {
				"additionalMeasurements": {
					"description": "additional measurement fields",
					"type": "array",
					"items": {  
						"$ref": "#/definitions/measurementGroup" 
					}
				},
				"aggregateCpuUsage": { 
					"description": "aggregate CPU usage of the VM on which the VNFC reporting the event is running",
					"type": "number" 
				},
				"codecUsageArray": {
					"description": "array of codecs in use",
					"type": "array",
					"items": {  
						"$ref": "#/definitions/codecsInUse" 
					}
				},
				"concurrentSessions": { 
					"description": "peak concurrent sessions for the VM over the measurementInterval",
					"type": "number" 
				},
				"configuredEntities": { 
					"description": "peak total number of users, subscribers, devices, adjacencies, etc., for the VM over the measurementInterval",
					"type": "number" 
				},
				"cpuUsageArray": {
					"description": "usage of an array of CPUs",
					"type": "array",
					"items": {
						"$ref": "#/definitions/cpuUsage"
					}
				},
				"featureUsageArray": {
					"description": "array of features in use",
					"type": "array",
					"items": {  
						"$ref": "#/definitions/featuresInUse" 
					}
				},
				"filesystemUsageArray": {
					"description": "filesystem usage of the VM on which the VNFC reporting the event is running",
					"type": "array",
					"items": {  
						"$ref": "#/definitions/filesystemUsage" 
					}
				},
				"latencyDistribution": { 
					"description": "array of integers representing counts of requests whose latency falls within per-VNF configured ranges",
					"type": "array",
					"items": {  
						"$ref": "#/definitions/latencyBucketMeasure" 
					}
				},
				"meanRequestLatency": { 
					"description": "mean seconds required to respond to each request for the VM on which the VNFC reporting the event is running",
					"type": "number" 
				},
				"measurementFieldsVersion": {
					"description": "version of the measurementFields block",
					"type": "number"
				},
				"measurementInterval": {
					"description": "interval over which the usage measures are being reported",
					"type": "number"
				},
				"memoryConfigured": { 
					"description": "memory configured in the VM on which the VNFC reporting the event is running",
					"type": "number"
				},
				"memoryUsed": {
					"description": "memory usage of the VM on which the VNFC reporting the event is running",
					"type": "number"
				},
				"numberOfMediaPortsInUse": {
					"description": "number of media ports in use",
					"type": "number"
				},
				"requestRate": { 
					"description": "peak request rate per second, for the VM over the measurementInterval",
					"type": "number" 
				},
				"vnfcScalingMetric": {
					"description": "represents busy-ness of the VNF from 0 to 100 as reported by the VNFC",
					"type": "number"
				},
				"vNicUsageArray": {
					"description": "usage of an array of virtual network interface cards",
					"type": "array",
					"items": {  
						"$ref": "#/definitions/vNicUsage" 
					}
				}
			},
			"required": [ "concurrentSessions", "configuredEntities", "cpuUsageArray", 
			              "filesystemUsageArray", "latencyDistribution", "meanRequestLatency", 
						  "measurementInterval", "memoryConfigured", "memoryUsed", 
						  "requestRate", "vNicUsageArray" ]
		},
		"measurementGroup": {
			"description": "measurement group",
			"type": "object",
			"properties": {
				"name":  { "type": "string" },
				"measurements": {
					"description": "array of name value pair measurements",
					"type": "array",
					"items": {  
						"$ref": "#/definitions/field" 
					}
				}
			},
			"required": [ "name", "measurements" ]
		},
		"mobileFlowFields": {
			"description": "mobileFlow fields",
			"type": "object",
			"properties": {
				"applicationType": {
					"description": "Application type inferred",
					"type": "string"
				},
				"appProtocolType": {
					"description": "application protocol",
					"type": "string"
				},
				"appProtocolVersion": {
					"description": "application protocol version",
					"type": "string"
				},
				"cid": {
					"description": "cell id",
					"type": "string"
				},
				"connectionType": {
					"description": "Abbreviation referencing a 3GPP reference point e.g., S1-U, S11, etc",
					"type": "string"
				},
				"ecgi": {
					"description": "Evolved Cell Global Id",
					"type": "string"
				},
				"flowDirection": {
					"description": "Flow direction, indicating if the reporting node is the source of the flow or destination for the flow",
					"type": "string"
				},
				"gtpPerFlowMetrics": { "$ref": "#/definitions/gtpPerFlowMetrics" },
				"gtpProtocolType": {
					"description": "GTP protocol",
					"type": "string"
				},
				"gtpVersion": {
					"description": "GTP protocol version",
					"type": "string"
				},
				"httpHeader": {
					"description": "HTTP request header, if the flow connects to a node referenced by HTTP",
					"type": "string"
				},
				"imei": {
					"description": "IMEI for the subscriber UE used in this flow, if the flow connects to a mobile device",
					"type": "string"
				},
				"imsi": {
					"description": "IMSI for the subscriber UE used in this flow, if the flow connects to a mobile device",
					"type": "string"
				},
				"ipProtocolType": {
					"description": "IP protocol type e.g., TCP, UDP, RTP...",
					"type": "string"
				},
				"ipVersion": {
					"description": "IP protocol version e.g., IPv4, IPv6",
					"type": "string"
				},
				"lac": {
					"description": "location area code",
					"type": "string"
				},
				"mcc": {
					"description": "mobile country code",
					"type": "string"
				},
				"mnc": {
					"description": "mobile network code",
					"type": "string"
				},
				"msisdn": {
					"description": "MSISDN for the subscriber UE used in this flow, as an integer, if the flow connects to a mobile device",
					"type": "string"
				},
				"otherEndpointIpAddress": {
					"description": "IP address for the other endpoint, as used for the flow being reported on",
					"type": "string"
				},
				"otherEndpointPort": {
					"description": "IP Port for the reporting entity, as used for the flow being reported on",
					"type": "number"
				},
				"otherFunctionalRole": {
					"description": "Functional role of the other endpoint for the flow being reported on e.g., MME, S-GW, P-GW, PCRF...",
					"type": "string"
				},
				"rac": {
					"description": "routing area code",
					"type": "string"
				},
				"radioAccessTechnology": {
					"description": "Radio Access Technology e.g., 2G, 3G, LTE",
					"type": "string"
				},
				"reportingEndpointIpAddr": {
					"description": "IP address for the reporting entity, as used for the flow being reported on",
					"type": "string"
				},
				"reportingEndpointPort": {
					"description": "IP port for the reporting entity, as used for the flow being reported on",
					"type": "number"
				},
				"sac": {
					"description": "service area code",
					"type": "string"
				},
				"samplingAlgorithm": {
					"description": "Integer identifier for the sampling algorithm or rule being applied in calculating the flow metrics if metrics are calculated based on a sample of packets, or 0 if no sampling is applied",
					"type": "number"
				},
				"tac": {
					"description": "transport area code",
					"type": "string"
				},
				"tunnelId": {
					"description": "tunnel identifier",
					"type": "string"
				},
				"vlanId": {
					"description": "VLAN identifier used by this flow",
					"type": "string"
				}
			},
			"required": [ "flowDirection", "gtpPerFlowMetrics", "ipProtocolType",
			              "ipVersion", "otherEndpointIpAddress", "otherEndpointPort",
			              "reportingEndpointIpAddr", "reportingEndpointPort" ]
		},
		"otherFields": {
			"description": "additional fields not reported elsewhere",
			"type": "array",
			"items": {  
				"$ref": "#/definitions/field" 
			}
		},
		"requestError": {
			"description": "standard request error data structure",
			"type": "object",
			"properties": { 
			    "messageId": {
					"description": "Unique message identifier of the format ‘ABCnnnn’ where ‘ABC’ is either ‘SVC’ for Service Exceptions or ‘POL’ for Policy Exception",
					"type": "string"
				},
				"text": {
					"description": "Message text, with replacement variables marked with %n, where n is an index into the list of <variables> elements, starting at 1",
					"type": "string"
				},
				"url": {
					"description": "Hyperlink to a detailed error resource e.g., an HTML page for browser user agents",
					"type": "string"
				},
				"variables": {
					"description": "List of zero or more strings that represent the contents of the variables used by the message text",
					"type": "string"
				}
			},
			"required": [ "messageId", "text" ] 
		},
		"suppressedNvPairs": {
			"description": "List of specific NvPairsNames to suppress within a given Name-Value Field for event Throttling",
			"type": "object",
			"properties": {
				"nvPairFieldName": {
					"description": "Name of the field within which are the nvpair names to suppress",
					"type": "string"
				},
				"suppressedNvPairNames": {
					"description": "Array of nvpair names to suppress within the nvpairFieldName",
			        "type": "array",
					"items": {
					    "type": "string"
					}
				}
			},
			"required": [ "nvPairFieldName", "suppressedNvPairNames" ]
		},
		"syslogFields": {
			"description": "sysLog fields",
			"type": "object",
			"properties": {
				"eventSourceHost": {
					"description": "hostname of the device",
					"type": "string"
				},
				"eventSourceType": {
					"description": "type of event source",
					"type": "string",
					"enum": [  
						"other(0)",
						"router(1)",
						"switch(2)",
						"host(3)",
						"card(4)",
						"port(5)",
						"slotThreshold(6)",
						"portThreshold(7)",
						"virtualMachine(8)",
						"virtualNetworkFunction(9)"
					]
				},
				"syslogFacility": {
					"description": "numeric code from 0 to 23 for facility--see table in documentation",
					"type": "number"
				},
				"syslogFieldsVersion": {
					"description": "version of the syslogFields block",
					"type": "number"
				},
				"syslogMsg": {
					"description": "syslog message",
					"type": "string"
				},
				"syslogProc": {
					"description": "identifies the application that originated the message",
					"type": "string"
				},
				"syslogProcId": {
					"description": "a change in the value of this field indicates a discontinuity in syslog reporting",
					"type": "number"
				},
				"syslogVer": {
					"description": "the version of the syslog protocol specification",
					"type": "number"
				},
				"syslogSData": {
					"description": "syslog structured data",
					"type": "string"
				},
				"syslogTag": {
					"description": "aka messageId identifies the type of message",
					"type": "string"
				}
			},
			"required": [ "eventSourceType", "syslogMsg", "syslogTag" ]
		},
		"thresholdCrossingAlertFields": {
			"description": "fields specific to threshold crossing alert events",
			"type": "object",
			"properties": {
				"additionalParameters": {
					"description": "performance counters",
					"type": "array",
					"items": {  
						"$ref": "#/definitions/counter" 
					}
				},
				"alertAction": {
					"description": "Event action",
					"type": "string",
					"enum": [
						"CLEAR",
						"CONT",
						"SET"
					]
				},
				"alertDescription": {
					"description": "Unique short alert description such as IF-SHUB-ERRDROP",
					"type": "string"
				},
				"alertType": {
					"description": "Event type",
					"type": "string",
					"enum": [
						"CARD-ANOMALY",
						"ELEMENT-ANOMALY",
						"INTERFACE-ANOMALY",
						"SERVICE-ANOMALY"
					]
				},
				"alertValue": {
					"description": "Calculated API value (if applicable)",
					"type": "string"
				},
				"associatedAlertIdList": {
					"description": "List of eventIds associated with the event being reported",
					"type": "array",
					"items": { "type": "string" }
				},
				"collectionTimestamp": {
					"description": "Time when the performance collector picked up the data",
					"type": "string"
				},
				"dataCollector": {
					"description": "Specific performance collector instance used",
					"type": "string"
				},
				"elementType": {
					"description": "Type of network element",
					"type": "string"
				},
				"eventStartTimestamp": {
					"description": "Time closest to when the measurement was made",
					"type": "string"
				},
				"interfaceName": {
					"description": "Physical or logical port or card (if applicable)",
					"type": "string"
				},
				"networkService": {
					"description": "Network name",
					"type": "string"
				},
				"possibleRootCause": {
					"description": "Reserved for future use",
					"type": "string"
				},
				"thresholdCrossingFieldsVersion": {
					"description": "version of the thresholdCrossingAlertFields block",
					"type": "number"
				}
			},	
			"required": [
				"additionalParameters",
				"alertAction",
				"alertDescription",
				"alertType",
				"collectionTimestamp",
				"elementType",
				"eventStartTimestamp",
				"networkService"
			]
		},
		"usageFields": {
			"description": "fields specific to usage events"
		},
		"vNicUsage": {
			"description": "usage of an identified vNic in megabytes per second",
			"type": "object",
			"properties": {
				"broadcastPacketsIn": { "type": "number" },
				"broadcastPacketsOut": { "type": "number" },
				"bytesIn": { "type": "number" },
				"bytesOut": { "type": "number" },
				"multicastPacketsIn": { "type": "number" },
				"multicastPacketsOut": { "type": "number" },
				"unicastPacketsIn": { "type": "number" },
				"unicastPacketsOut": { "type": "number" },
				"vNicIdentifier": { "type": "string" }
			},
			"required": [ "broadcastPacketsIn", "broadcastPacketsOut", "bytesIn", "bytesOut",
			              "multicastPacketsIn", "multicastPacketsOut", "unicastPacketsIn",
						  "unicastPacketsOut", "vNicIdentifier"]
		}		
	},
	"title": "Event Listener",
		"type": "object",
			"properties": {
                  "event": {"$ref": "#/definitions/event"}
            },
            "required": ["event"]
}